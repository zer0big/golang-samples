pool:
  vmImage: 'ubuntu-16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.12' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
# Setup GO environment; for details see
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/go?view=azure-devops#set-up-a-go-workspace
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

# Note: GO Modules (https://blog.golang.org/using-go-modules) are out-of-scope of this demo
- script: go get github.com/gorilla/mux
  workingDirectory: '$(modulePath)/go-microservices/05-simple-web-api'
  displayName: 'go get dependencies'

- script: go build -v -o ./web .
  workingDirectory: '$(modulePath)/go-microservices/05-simple-web-api'
  displayName: 'Build'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(modulePath)/go-microservices/05-simple-web-api'
    contents: 'web'
    targetFolder: $(Build.ArtifactStagingDirectory)
    flattenFolders: true
  displayName: 'Copy artifacts to staging directory'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop
  displayName: 'Publish build artifacts'